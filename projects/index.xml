<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Проекты on Ладыгин Сергей</title><link>https://updev.ru/projects/</link><description>Recent content in Проекты on Ладыгин Сергей</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><atom:link href="https://updev.ru/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Dkron PHP Client</title><link>https://updev.ru/projects/dkron-php-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://updev.ru/projects/dkron-php-client/</guid><description>Клиент на PHP для API Dkron.
Бибилиотека использует последнюю версию API, работает на актуальных версиях PHP и 100% кода покрыто unit тестами.
Документация API Dkron
Пример подключения библиотеки в проект composer require updevru/dkron-php-client Пример использования use Http\Client\Curl\Client; use Nyholm\Psr7\Factory\Psr17Factory; use Updevru\Dkron\ApiClient; use Updevru\Dkron\Endpoint\EndpointCollection; $client = new Updevru\Dkron\ApiClient( new Updevru\Dkron\Endpoint\EndpointCollection( [ [ &amp;#39;url&amp;#39; =&amp;gt; &amp;#39;http://localhost&amp;#39;, &amp;#39;login&amp;#39; =&amp;gt; null, &amp;#39;password&amp;#39; =&amp;gt; null, ] ] ), new Http\Client\Curl\Client(), new Nyholm\Psr7\Factory\Psr17Factory(), new Nyholm\Psr7\Factory\Psr17Factory() ); $api = new \Updevru\Dkron\Api($client, new \Updevru\Dkron\Serializer\JMSSerializer()); $jobs = $api-&amp;gt;jobs-&amp;gt;getJobs(); $newJob = new \Updevru\Dkron\Dto\JobDto(); $newJob-&amp;gt;setName(&amp;#39;test_job&amp;#39;); $newJob-&amp;gt;setSchedule(&amp;#39;*/2 * * * * *&amp;#39;); $newJob-&amp;gt;setConcurrency(\Updevru\Dkron\Dto\JobDto::CONCURRENCY_FORBID); $newJob-&amp;gt;setExecutor(&amp;#39;shell&amp;#39;); $newJob-&amp;gt;setExecutorConfig([&amp;#39;command&amp;#39; =&amp;gt; &amp;#39;echo Hello&amp;#39;]); $api-&amp;gt;jobs-&amp;gt;createOrUpdateJob($newJob); $api-&amp;gt;jobs-&amp;gt;toggleJob(&amp;#39;test_job&amp;#39;); $api-&amp;gt;jobs-&amp;gt;deleteJob(&amp;#39;test_job&amp;#39;); Более подробная информация на Github.</description></item><item><title>PolkovnikBot</title><link>https://updev.ru/projects/polkovnik-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://updev.ru/projects/polkovnik-bot/</guid><description>Бот-помощник по организации работы команды и увеличения ее эффективности. Помогает не пропускать важные события (встречи, дни рождения), контролирует списание врмение в задачах (если кто то забыл - напоминает), уведомляет о важных событиях (новые pull request, релизы, сборки и прочее).
Проект призван забрать на себя часть рутины, которую можно автоматизировать.
Возможности Напоминание о списании времени по задачам Уведомление об отпусках Отправка сообщений в командный чат по расписанию Интеграция с такс трекерами - Jira Интеграция с чатами - Telegram, Webex Управление через web интерфейс API Более подробная информация на Github.</description></item></channel></rss>